{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "Work in progress to set up cloud infrastructure.",

  "Parameters" : {
  },

  "Resources" : {
    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
      }
    },

	  "Subnet" : {
	    "Type" : "AWS::EC2::Subnet",
	    "Properties" : {
	      "VpcId" : { "Ref" : "VPC" },
	      "CidrBlock" : "10.0.0.0/24",
	      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	  },

	  "InternetGateway" : {
	    "Type" : "AWS::EC2::InternetGateway",
	    "Properties" : {
	      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	  },

	  "AttachGateway" : {
	     "Type" : "AWS::EC2::VPCGatewayAttachment",
	     "Properties" : {
	       "VpcId" : { "Ref" : "VPC" },
	       "InternetGatewayId" : { "Ref" : "InternetGateway" }
	     }
	  },

	  "RouteTable" : {
	    "Type" : "AWS::EC2::RouteTable",
	    "Properties" : {
	      "VpcId" : {"Ref" : "VPC"},
	      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	  },

	  "Route" : {
	    "Type" : "AWS::EC2::Route",
	    "DependsOn" : "AttachGateway",
	    "Properties" : {
	      "RouteTableId" : { "Ref" : "RouteTable" },
	      "DestinationCidrBlock" : "0.0.0.0/0",
	      "GatewayId" : { "Ref" : "InternetGateway" }
	    }
	  },

	  "SubnetRouteTableAssociation" : {
	    "Type" : "AWS::EC2::SubnetRouteTableAssociation",
	    "Properties" : {
	      "SubnetId" : { "Ref" : "Subnet" },
	      "RouteTableId" : { "Ref" : "RouteTable" }
	    }
	  },

	  "NetworkAcl" : {
	    "Type" : "AWS::EC2::NetworkAcl",
	    "Properties" : {
	      "VpcId" : {"Ref" : "VPC"},
	      "Tags" : [ {"Key" : "Application", "Value" : { "Ref" : "AWS::StackId"} } ]
	    }
	  },

	  "InboundSSHNetworkAclEntry" : {
	    "Type" : "AWS::EC2::NetworkAclEntry",
	    "Properties" : {
	      "NetworkAclId" : {"Ref" : "NetworkAcl"},
	      "RuleNumber" : "101",
	      "Protocol" : "6",
	      "RuleAction" : "allow",
	      "Egress" : "false",
	      "CidrBlock" : "0.0.0.0/0",
	      "PortRange" : {"From" : "22", "To" : "22"}
	    }
	  },

    "OutBoundResponsePortsNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "NetworkAcl"},
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },

	  "SubnetNetworkAclAssociation" : {
	    "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
	    "Properties" : {
	      "SubnetId" : { "Ref" : "Subnet" },
	      "NetworkAclId" : { "Ref" : "NetworkAcl" }
	    }
	  },

	  "InstanceSecurityGroup" : {
	    "Type" : "AWS::EC2::SecurityGroup",
	    "Properties" : {
	      "VpcId" : { "Ref" : "VPC" },
	      "GroupDescription" : "Enable SSH access via port 22",
	      "SecurityGroupIngress" : [
	        {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
	       ]
	    }
	  },

	  "OrchestratorLaunchConfig": {
	    "Type" : "AWS::AutoScaling::LaunchConfiguration",

	    "Metadata" : {
	      "Comment" : "Does this even work?",
	      "AWS::CloudFormation::Init" : {
	        "config" : {
	        },
          "files" : {
            "/hello_world" : {
              "content" : "Hello, World!",
              "mode"    : "000644",
              "owner"   : "root",
              "group"   : "root"
            }
          },

	        "services" : { }
	      }
	    },
	    "Properties" : {
	      "ImageId" : "ami-04806964",
	      "InstanceType" : "t2.small",
	      "KeyName" : "Bill - work laptop",
	      "SecurityGroups" : [{ "Ref" : "InstanceSecurityGroup" }],
	      "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
	           "#!/bin/bash -xe\n",
	           "echo hi > /hello_again",
	           "\n"
	      ]]}}
	    }
	  },

    "OrchestratorScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "VPCZoneIdentifier" : [{ "Ref" : "Subnet" }],
        "LaunchConfigurationName" : { "Ref" : "OrchestratorLaunchConfig" },
        "MinSize" : "3",
        "MaxSize" : "3"
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT5M",
          "Count"   : "2"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime" : "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    }
  }
}